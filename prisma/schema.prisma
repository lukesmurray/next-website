// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

model File {

  /// The path to the file. Relative to the root directory.
  path String @id

  /// The Pages that this file is associated with
  Pages Page[]
}

model Page {

  /// The unique slug identifying the location of the page in the blog
  slug String @id

  /// the content of the page
  content String

  /// the date field from the page frontmatter
  date DateTime?

  /// the description string from the frontmatter
  description String?

  /// Path to the directory containing this file. Relative to the root directory
  dir String

  /// true if the content is a draft
  /// comes from the draft field in frontmatter
  draft Boolean

  // /// information about the file associated with the page
  file File? @relation(fields: [filePath], references: [path])

  /// The path to the file. Relative to the root directory.
  filePath String? // relation scalar field

  /// True if the page is the home page
  isHome Boolean

  /// True if the page is a section
  isSection Boolean

  /// The kind of the page. One of "home" | "page" | "section"
  ///
  /// Note that a home page is also a section. It is a superset of the section
  /// type. So a page with `kind: home` would also have `isSection: true`
  kind String

  /// The title for this page
  title String

  // /// The parent of the current page, null on the home page
  parent     Page?   @relation("parentHierarchy", fields: [parentSlug], references: [slug])
  // /// The direct children of the current page
  pages      Page[]  @relation("parentHierarchy")
  parentSlug String? //relation scalar field

  // /// The first section below the root which is an ancestor of this page
  firstSection      Page?   @relation("firstSectionHierarchy", fields: [firstSectionSlug], references: [slug])
  // /// The direct children of the current page
  firstSectionPages Page[]  @relation("firstSectionHierarchy")
  firstSectionSlug  String? //relation scalar field

}
