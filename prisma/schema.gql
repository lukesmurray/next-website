# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateFile {
  _count: FileCountAggregate
  _max: FileMaxAggregate
  _min: FileMinAggregate
}

type AggregatePage {
  _count: PageCountAggregate
  _max: PageMaxAggregate
  _min: PageMinAggregate
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

type File {
  """The Pages that this file is associated with"""
  Pages(cursor: PageWhereUniqueInput, distinct: [PageScalarFieldEnum!], orderBy: [PageOrderByWithRelationInput!], skip: Int, take: Int, where: PageWhereInput): [Page!]!
  _count: FileCount

  """The path to the file. Relative to the root directory."""
  path: String!
}

type FileCount {
  Pages: Int!
}

type FileCountAggregate {
  _all: Int!
  path: Int!
}

input FileCountOrderByAggregateInput {
  path: SortOrder
}

input FileCreateInput {
  Pages: PageCreateNestedManyWithoutFileInput
  path: String!
}

input FileCreateNestedOneWithoutPagesInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutPagesInput
  create: FileCreateWithoutPagesInput
}

input FileCreateOrConnectWithoutPagesInput {
  create: FileCreateWithoutPagesInput!
  where: FileWhereUniqueInput!
}

input FileCreateWithoutPagesInput {
  path: String!
}

type FileGroupBy {
  _count: FileCountAggregate
  _max: FileMaxAggregate
  _min: FileMinAggregate
  path: String!
}

type FileMaxAggregate {
  path: String
}

input FileMaxOrderByAggregateInput {
  path: SortOrder
}

type FileMinAggregate {
  path: String
}

input FileMinOrderByAggregateInput {
  path: SortOrder
}

input FileOrderByWithAggregationInput {
  _count: FileCountOrderByAggregateInput
  _max: FileMaxOrderByAggregateInput
  _min: FileMinOrderByAggregateInput
  path: SortOrder
}

input FileOrderByWithRelationInput {
  Pages: PageOrderByRelationAggregateInput
  path: SortOrder
}

input FileRelationFilter {
  is: FileWhereInput
  isNot: FileWhereInput
}

enum FileScalarFieldEnum {
  path
}

input FileScalarWhereWithAggregatesInput {
  AND: [FileScalarWhereWithAggregatesInput!]
  NOT: [FileScalarWhereWithAggregatesInput!]
  OR: [FileScalarWhereWithAggregatesInput!]
  path: StringWithAggregatesFilter
}

input FileUpdateInput {
  Pages: PageUpdateManyWithoutFileInput
  path: StringFieldUpdateOperationsInput
}

input FileUpdateManyMutationInput {
  path: StringFieldUpdateOperationsInput
}

input FileUpdateOneWithoutPagesInput {
  connect: FileWhereUniqueInput
  connectOrCreate: FileCreateOrConnectWithoutPagesInput
  create: FileCreateWithoutPagesInput
  delete: Boolean
  disconnect: Boolean
  update: FileUpdateWithoutPagesInput
  upsert: FileUpsertWithoutPagesInput
}

input FileUpdateWithoutPagesInput {
  path: StringFieldUpdateOperationsInput
}

input FileUpsertWithoutPagesInput {
  create: FileCreateWithoutPagesInput!
  update: FileUpdateWithoutPagesInput!
}

input FileWhereInput {
  AND: [FileWhereInput!]
  NOT: [FileWhereInput!]
  OR: [FileWhereInput!]
  Pages: PageListRelationFilter
  path: StringFilter
}

input FileWhereUniqueInput {
  path: String
}

type Mutation {
  createFile(data: FileCreateInput!): File!
  createPage(data: PageCreateInput!): Page!
  deleteFile(where: FileWhereUniqueInput!): File
  deleteManyFile(where: FileWhereInput): AffectedRowsOutput!
  deleteManyPage(where: PageWhereInput): AffectedRowsOutput!
  deletePage(where: PageWhereUniqueInput!): Page
  updateFile(data: FileUpdateInput!, where: FileWhereUniqueInput!): File
  updateManyFile(data: FileUpdateManyMutationInput!, where: FileWhereInput): AffectedRowsOutput!
  updateManyPage(data: PageUpdateManyMutationInput!, where: PageWhereInput): AffectedRowsOutput!
  updatePage(data: PageUpdateInput!, where: PageWhereUniqueInput!): Page
  upsertFile(create: FileCreateInput!, update: FileUpdateInput!, where: FileWhereUniqueInput!): File!
  upsertPage(create: PageCreateInput!, update: PageUpdateInput!, where: PageWhereUniqueInput!): Page!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Page {
  _count: PageCount

  """the content of the page"""
  content: String!

  """the date field from the page frontmatter"""
  date: DateTime

  """the description string from the frontmatter"""
  description: String

  """
  Path to the directory containing this file. Relative to the root directory
  """
  dir: String!

  """
  true if the content is a draft
  comes from the draft field in frontmatter
  """
  draft: Boolean!
  file: File

  """The path to the file. Relative to the root directory."""
  filePath: String
  firstSection: Page
  firstSectionPages(cursor: PageWhereUniqueInput, distinct: [PageScalarFieldEnum!], orderBy: [PageOrderByWithRelationInput!], skip: Int, take: Int, where: PageWhereInput): [Page!]!
  firstSectionSlug: String

  """The path to an image. Relative to the file."""
  image: String

  """True if the page is the home page"""
  isHome: Boolean!

  """True if the page is a section"""
  isSection: Boolean!

  """
  The kind of the page. One of "home" | "page" | "section"
  
  Note that a home page is also a section. It is a superset of the section
  type. So a page with `kind: home` would also have `isSection: true`
  """
  kind: String!
  pages(cursor: PageWhereUniqueInput, distinct: [PageScalarFieldEnum!], orderBy: [PageOrderByWithRelationInput!], skip: Int, take: Int, where: PageWhereInput): [Page!]!
  parent: Page
  parentSlug: String

  """The unique slug identifying the location of the page in the blog"""
  slug: String!

  """The title for this page"""
  title: String!
}

type PageCount {
  firstSectionPages: Int!
  pages: Int!
}

type PageCountAggregate {
  _all: Int!
  content: Int!
  date: Int!
  description: Int!
  dir: Int!
  draft: Int!
  filePath: Int!
  firstSectionSlug: Int!
  image: Int!
  isHome: Int!
  isSection: Int!
  kind: Int!
  parentSlug: Int!
  slug: Int!
  title: Int!
}

input PageCountOrderByAggregateInput {
  content: SortOrder
  date: SortOrder
  description: SortOrder
  dir: SortOrder
  draft: SortOrder
  filePath: SortOrder
  firstSectionSlug: SortOrder
  image: SortOrder
  isHome: SortOrder
  isSection: SortOrder
  kind: SortOrder
  parentSlug: SortOrder
  slug: SortOrder
  title: SortOrder
}

input PageCreateInput {
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  file: FileCreateNestedOneWithoutPagesInput
  firstSection: PageCreateNestedOneWithoutFirstSectionPagesInput
  firstSectionPages: PageCreateNestedManyWithoutFirstSectionInput
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  pages: PageCreateNestedManyWithoutParentInput
  parent: PageCreateNestedOneWithoutPagesInput
  slug: String!
  title: String!
}

input PageCreateNestedManyWithoutFileInput {
  connect: [PageWhereUniqueInput!]
  connectOrCreate: [PageCreateOrConnectWithoutFileInput!]
  create: [PageCreateWithoutFileInput!]
}

input PageCreateNestedManyWithoutFirstSectionInput {
  connect: [PageWhereUniqueInput!]
  connectOrCreate: [PageCreateOrConnectWithoutFirstSectionInput!]
  create: [PageCreateWithoutFirstSectionInput!]
}

input PageCreateNestedManyWithoutParentInput {
  connect: [PageWhereUniqueInput!]
  connectOrCreate: [PageCreateOrConnectWithoutParentInput!]
  create: [PageCreateWithoutParentInput!]
}

input PageCreateNestedOneWithoutFirstSectionPagesInput {
  connect: PageWhereUniqueInput
  connectOrCreate: PageCreateOrConnectWithoutFirstSectionPagesInput
  create: PageCreateWithoutFirstSectionPagesInput
}

input PageCreateNestedOneWithoutPagesInput {
  connect: PageWhereUniqueInput
  connectOrCreate: PageCreateOrConnectWithoutPagesInput
  create: PageCreateWithoutPagesInput
}

input PageCreateOrConnectWithoutFileInput {
  create: PageCreateWithoutFileInput!
  where: PageWhereUniqueInput!
}

input PageCreateOrConnectWithoutFirstSectionInput {
  create: PageCreateWithoutFirstSectionInput!
  where: PageWhereUniqueInput!
}

input PageCreateOrConnectWithoutFirstSectionPagesInput {
  create: PageCreateWithoutFirstSectionPagesInput!
  where: PageWhereUniqueInput!
}

input PageCreateOrConnectWithoutPagesInput {
  create: PageCreateWithoutPagesInput!
  where: PageWhereUniqueInput!
}

input PageCreateOrConnectWithoutParentInput {
  create: PageCreateWithoutParentInput!
  where: PageWhereUniqueInput!
}

input PageCreateWithoutFileInput {
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  firstSection: PageCreateNestedOneWithoutFirstSectionPagesInput
  firstSectionPages: PageCreateNestedManyWithoutFirstSectionInput
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  pages: PageCreateNestedManyWithoutParentInput
  parent: PageCreateNestedOneWithoutPagesInput
  slug: String!
  title: String!
}

input PageCreateWithoutFirstSectionInput {
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  file: FileCreateNestedOneWithoutPagesInput
  firstSectionPages: PageCreateNestedManyWithoutFirstSectionInput
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  pages: PageCreateNestedManyWithoutParentInput
  parent: PageCreateNestedOneWithoutPagesInput
  slug: String!
  title: String!
}

input PageCreateWithoutFirstSectionPagesInput {
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  file: FileCreateNestedOneWithoutPagesInput
  firstSection: PageCreateNestedOneWithoutFirstSectionPagesInput
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  pages: PageCreateNestedManyWithoutParentInput
  parent: PageCreateNestedOneWithoutPagesInput
  slug: String!
  title: String!
}

input PageCreateWithoutPagesInput {
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  file: FileCreateNestedOneWithoutPagesInput
  firstSection: PageCreateNestedOneWithoutFirstSectionPagesInput
  firstSectionPages: PageCreateNestedManyWithoutFirstSectionInput
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  parent: PageCreateNestedOneWithoutPagesInput
  slug: String!
  title: String!
}

input PageCreateWithoutParentInput {
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  file: FileCreateNestedOneWithoutPagesInput
  firstSection: PageCreateNestedOneWithoutFirstSectionPagesInput
  firstSectionPages: PageCreateNestedManyWithoutFirstSectionInput
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  pages: PageCreateNestedManyWithoutParentInput
  slug: String!
  title: String!
}

type PageGroupBy {
  _count: PageCountAggregate
  _max: PageMaxAggregate
  _min: PageMinAggregate
  content: String!
  date: DateTime
  description: String
  dir: String!
  draft: Boolean!
  filePath: String
  firstSectionSlug: String
  image: String
  isHome: Boolean!
  isSection: Boolean!
  kind: String!
  parentSlug: String
  slug: String!
  title: String!
}

input PageListRelationFilter {
  every: PageWhereInput
  none: PageWhereInput
  some: PageWhereInput
}

type PageMaxAggregate {
  content: String
  date: DateTime
  description: String
  dir: String
  draft: Boolean
  filePath: String
  firstSectionSlug: String
  image: String
  isHome: Boolean
  isSection: Boolean
  kind: String
  parentSlug: String
  slug: String
  title: String
}

input PageMaxOrderByAggregateInput {
  content: SortOrder
  date: SortOrder
  description: SortOrder
  dir: SortOrder
  draft: SortOrder
  filePath: SortOrder
  firstSectionSlug: SortOrder
  image: SortOrder
  isHome: SortOrder
  isSection: SortOrder
  kind: SortOrder
  parentSlug: SortOrder
  slug: SortOrder
  title: SortOrder
}

type PageMinAggregate {
  content: String
  date: DateTime
  description: String
  dir: String
  draft: Boolean
  filePath: String
  firstSectionSlug: String
  image: String
  isHome: Boolean
  isSection: Boolean
  kind: String
  parentSlug: String
  slug: String
  title: String
}

input PageMinOrderByAggregateInput {
  content: SortOrder
  date: SortOrder
  description: SortOrder
  dir: SortOrder
  draft: SortOrder
  filePath: SortOrder
  firstSectionSlug: SortOrder
  image: SortOrder
  isHome: SortOrder
  isSection: SortOrder
  kind: SortOrder
  parentSlug: SortOrder
  slug: SortOrder
  title: SortOrder
}

input PageOrderByRelationAggregateInput {
  _count: SortOrder
}

input PageOrderByWithAggregationInput {
  _count: PageCountOrderByAggregateInput
  _max: PageMaxOrderByAggregateInput
  _min: PageMinOrderByAggregateInput
  content: SortOrder
  date: SortOrder
  description: SortOrder
  dir: SortOrder
  draft: SortOrder
  filePath: SortOrder
  firstSectionSlug: SortOrder
  image: SortOrder
  isHome: SortOrder
  isSection: SortOrder
  kind: SortOrder
  parentSlug: SortOrder
  slug: SortOrder
  title: SortOrder
}

input PageOrderByWithRelationInput {
  content: SortOrder
  date: SortOrder
  description: SortOrder
  dir: SortOrder
  draft: SortOrder
  file: FileOrderByWithRelationInput
  filePath: SortOrder
  firstSection: PageOrderByWithRelationInput
  firstSectionPages: PageOrderByRelationAggregateInput
  firstSectionSlug: SortOrder
  image: SortOrder
  isHome: SortOrder
  isSection: SortOrder
  kind: SortOrder
  pages: PageOrderByRelationAggregateInput
  parent: PageOrderByWithRelationInput
  parentSlug: SortOrder
  slug: SortOrder
  title: SortOrder
}

input PageRelationFilter {
  is: PageWhereInput
  isNot: PageWhereInput
}

enum PageScalarFieldEnum {
  content
  date
  description
  dir
  draft
  filePath
  firstSectionSlug
  image
  isHome
  isSection
  kind
  parentSlug
  slug
  title
}

input PageScalarWhereInput {
  AND: [PageScalarWhereInput!]
  NOT: [PageScalarWhereInput!]
  OR: [PageScalarWhereInput!]
  content: StringFilter
  date: DateTimeNullableFilter
  description: StringNullableFilter
  dir: StringFilter
  draft: BoolFilter
  filePath: StringNullableFilter
  firstSectionSlug: StringNullableFilter
  image: StringNullableFilter
  isHome: BoolFilter
  isSection: BoolFilter
  kind: StringFilter
  parentSlug: StringNullableFilter
  slug: StringFilter
  title: StringFilter
}

input PageScalarWhereWithAggregatesInput {
  AND: [PageScalarWhereWithAggregatesInput!]
  NOT: [PageScalarWhereWithAggregatesInput!]
  OR: [PageScalarWhereWithAggregatesInput!]
  content: StringWithAggregatesFilter
  date: DateTimeNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  dir: StringWithAggregatesFilter
  draft: BoolWithAggregatesFilter
  filePath: StringNullableWithAggregatesFilter
  firstSectionSlug: StringNullableWithAggregatesFilter
  image: StringNullableWithAggregatesFilter
  isHome: BoolWithAggregatesFilter
  isSection: BoolWithAggregatesFilter
  kind: StringWithAggregatesFilter
  parentSlug: StringNullableWithAggregatesFilter
  slug: StringWithAggregatesFilter
  title: StringWithAggregatesFilter
}

input PageUpdateInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  file: FileUpdateOneWithoutPagesInput
  firstSection: PageUpdateOneWithoutFirstSectionPagesInput
  firstSectionPages: PageUpdateManyWithoutFirstSectionInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  pages: PageUpdateManyWithoutParentInput
  parent: PageUpdateOneWithoutPagesInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpdateManyWithWhereWithoutFileInput {
  data: PageUpdateManyMutationInput!
  where: PageScalarWhereInput!
}

input PageUpdateManyWithWhereWithoutFirstSectionInput {
  data: PageUpdateManyMutationInput!
  where: PageScalarWhereInput!
}

input PageUpdateManyWithWhereWithoutParentInput {
  data: PageUpdateManyMutationInput!
  where: PageScalarWhereInput!
}

input PageUpdateManyWithoutFileInput {
  connect: [PageWhereUniqueInput!]
  connectOrCreate: [PageCreateOrConnectWithoutFileInput!]
  create: [PageCreateWithoutFileInput!]
  delete: [PageWhereUniqueInput!]
  deleteMany: [PageScalarWhereInput!]
  disconnect: [PageWhereUniqueInput!]
  set: [PageWhereUniqueInput!]
  update: [PageUpdateWithWhereUniqueWithoutFileInput!]
  updateMany: [PageUpdateManyWithWhereWithoutFileInput!]
  upsert: [PageUpsertWithWhereUniqueWithoutFileInput!]
}

input PageUpdateManyWithoutFirstSectionInput {
  connect: [PageWhereUniqueInput!]
  connectOrCreate: [PageCreateOrConnectWithoutFirstSectionInput!]
  create: [PageCreateWithoutFirstSectionInput!]
  delete: [PageWhereUniqueInput!]
  deleteMany: [PageScalarWhereInput!]
  disconnect: [PageWhereUniqueInput!]
  set: [PageWhereUniqueInput!]
  update: [PageUpdateWithWhereUniqueWithoutFirstSectionInput!]
  updateMany: [PageUpdateManyWithWhereWithoutFirstSectionInput!]
  upsert: [PageUpsertWithWhereUniqueWithoutFirstSectionInput!]
}

input PageUpdateManyWithoutParentInput {
  connect: [PageWhereUniqueInput!]
  connectOrCreate: [PageCreateOrConnectWithoutParentInput!]
  create: [PageCreateWithoutParentInput!]
  delete: [PageWhereUniqueInput!]
  deleteMany: [PageScalarWhereInput!]
  disconnect: [PageWhereUniqueInput!]
  set: [PageWhereUniqueInput!]
  update: [PageUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [PageUpdateManyWithWhereWithoutParentInput!]
  upsert: [PageUpsertWithWhereUniqueWithoutParentInput!]
}

input PageUpdateOneWithoutFirstSectionPagesInput {
  connect: PageWhereUniqueInput
  connectOrCreate: PageCreateOrConnectWithoutFirstSectionPagesInput
  create: PageCreateWithoutFirstSectionPagesInput
  delete: Boolean
  disconnect: Boolean
  update: PageUpdateWithoutFirstSectionPagesInput
  upsert: PageUpsertWithoutFirstSectionPagesInput
}

input PageUpdateOneWithoutPagesInput {
  connect: PageWhereUniqueInput
  connectOrCreate: PageCreateOrConnectWithoutPagesInput
  create: PageCreateWithoutPagesInput
  delete: Boolean
  disconnect: Boolean
  update: PageUpdateWithoutPagesInput
  upsert: PageUpsertWithoutPagesInput
}

input PageUpdateWithWhereUniqueWithoutFileInput {
  data: PageUpdateWithoutFileInput!
  where: PageWhereUniqueInput!
}

input PageUpdateWithWhereUniqueWithoutFirstSectionInput {
  data: PageUpdateWithoutFirstSectionInput!
  where: PageWhereUniqueInput!
}

input PageUpdateWithWhereUniqueWithoutParentInput {
  data: PageUpdateWithoutParentInput!
  where: PageWhereUniqueInput!
}

input PageUpdateWithoutFileInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  firstSection: PageUpdateOneWithoutFirstSectionPagesInput
  firstSectionPages: PageUpdateManyWithoutFirstSectionInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  pages: PageUpdateManyWithoutParentInput
  parent: PageUpdateOneWithoutPagesInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpdateWithoutFirstSectionInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  file: FileUpdateOneWithoutPagesInput
  firstSectionPages: PageUpdateManyWithoutFirstSectionInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  pages: PageUpdateManyWithoutParentInput
  parent: PageUpdateOneWithoutPagesInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpdateWithoutFirstSectionPagesInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  file: FileUpdateOneWithoutPagesInput
  firstSection: PageUpdateOneWithoutFirstSectionPagesInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  pages: PageUpdateManyWithoutParentInput
  parent: PageUpdateOneWithoutPagesInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpdateWithoutPagesInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  file: FileUpdateOneWithoutPagesInput
  firstSection: PageUpdateOneWithoutFirstSectionPagesInput
  firstSectionPages: PageUpdateManyWithoutFirstSectionInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  parent: PageUpdateOneWithoutPagesInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpdateWithoutParentInput {
  content: StringFieldUpdateOperationsInput
  date: NullableDateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  dir: StringFieldUpdateOperationsInput
  draft: BoolFieldUpdateOperationsInput
  file: FileUpdateOneWithoutPagesInput
  firstSection: PageUpdateOneWithoutFirstSectionPagesInput
  firstSectionPages: PageUpdateManyWithoutFirstSectionInput
  image: NullableStringFieldUpdateOperationsInput
  isHome: BoolFieldUpdateOperationsInput
  isSection: BoolFieldUpdateOperationsInput
  kind: StringFieldUpdateOperationsInput
  pages: PageUpdateManyWithoutParentInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input PageUpsertWithWhereUniqueWithoutFileInput {
  create: PageCreateWithoutFileInput!
  update: PageUpdateWithoutFileInput!
  where: PageWhereUniqueInput!
}

input PageUpsertWithWhereUniqueWithoutFirstSectionInput {
  create: PageCreateWithoutFirstSectionInput!
  update: PageUpdateWithoutFirstSectionInput!
  where: PageWhereUniqueInput!
}

input PageUpsertWithWhereUniqueWithoutParentInput {
  create: PageCreateWithoutParentInput!
  update: PageUpdateWithoutParentInput!
  where: PageWhereUniqueInput!
}

input PageUpsertWithoutFirstSectionPagesInput {
  create: PageCreateWithoutFirstSectionPagesInput!
  update: PageUpdateWithoutFirstSectionPagesInput!
}

input PageUpsertWithoutPagesInput {
  create: PageCreateWithoutPagesInput!
  update: PageUpdateWithoutPagesInput!
}

input PageWhereInput {
  AND: [PageWhereInput!]
  NOT: [PageWhereInput!]
  OR: [PageWhereInput!]
  content: StringFilter
  date: DateTimeNullableFilter
  description: StringNullableFilter
  dir: StringFilter
  draft: BoolFilter
  file: FileRelationFilter
  filePath: StringNullableFilter
  firstSection: PageRelationFilter
  firstSectionPages: PageListRelationFilter
  firstSectionSlug: StringNullableFilter
  image: StringNullableFilter
  isHome: BoolFilter
  isSection: BoolFilter
  kind: StringFilter
  pages: PageListRelationFilter
  parent: PageRelationFilter
  parentSlug: StringNullableFilter
  slug: StringFilter
  title: StringFilter
}

input PageWhereUniqueInput {
  slug: String
}

type Query {
  aggregateFile(cursor: FileWhereUniqueInput, orderBy: [FileOrderByWithRelationInput!], skip: Int, take: Int, where: FileWhereInput): AggregateFile!
  aggregatePage(cursor: PageWhereUniqueInput, orderBy: [PageOrderByWithRelationInput!], skip: Int, take: Int, where: PageWhereInput): AggregatePage!
  file(where: FileWhereUniqueInput!): File
  files(cursor: FileWhereUniqueInput, distinct: [FileScalarFieldEnum!], orderBy: [FileOrderByWithRelationInput!], skip: Int, take: Int, where: FileWhereInput): [File!]!
  findFirstFile(cursor: FileWhereUniqueInput, distinct: [FileScalarFieldEnum!], orderBy: [FileOrderByWithRelationInput!], skip: Int, take: Int, where: FileWhereInput): File
  findFirstPage(cursor: PageWhereUniqueInput, distinct: [PageScalarFieldEnum!], orderBy: [PageOrderByWithRelationInput!], skip: Int, take: Int, where: PageWhereInput): Page
  groupByFile(by: [FileScalarFieldEnum!]!, having: FileScalarWhereWithAggregatesInput, orderBy: [FileOrderByWithAggregationInput!], skip: Int, take: Int, where: FileWhereInput): [FileGroupBy!]!
  groupByPage(by: [PageScalarFieldEnum!]!, having: PageScalarWhereWithAggregatesInput, orderBy: [PageOrderByWithAggregationInput!], skip: Int, take: Int, where: PageWhereInput): [PageGroupBy!]!
  page(where: PageWhereUniqueInput!): Page
  pages(cursor: PageWhereUniqueInput, distinct: [PageScalarFieldEnum!], orderBy: [PageOrderByWithRelationInput!], skip: Int, take: Int, where: PageWhereInput): [Page!]!
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}
